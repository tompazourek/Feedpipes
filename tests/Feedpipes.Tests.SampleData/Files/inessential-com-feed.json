{
  "version": "https://jsonfeed.org/version/1",
  "user_comment": "This feed allows you to read the posts from this site in any feed reader that supports the JSON Feed format. To add this feed to your reader, copy the following URL — https://inessential.com/feed.json — and add it your reader.",
  "title": "inessential",
  "description": "Brent Simmons’s weblog.",
  "home_page_url": "https://inessential.com/",
  "feed_url": "https://inessential.com/feed.json",
  "author": {
    "name": "Brent Simmons",
    "url": "https://inessential.com/",
    "avatar": "https://ranchero.com/downloads/brent_avatar.png"
  },
  "items": [
    {
      "title": "How Release Day Went",
      "date_published": "2019-08-27T13:28:27-07:00",
      "id": "https://inessential.com/2019/08/27/how_release_day_went",
      "url": "https://inessential.com/2019/08/27/how_release_day_went",
      "content_html": "<p>Yesterday was a great day! A few things to note, in no particular order:</p>\n\n<p>NetNewsWire got some press coverage, including a well-done <a href=\"https://www.macstories.net/reviews/netnewswire-review-the-mac-rss-client-rebooted-with-a-solid-foundation-for-the-future/\">review in MacStories</a>.</p>\n\n<p>We got a lot of feature requests, but no bug reports.</p>\n\n<p>Except that we did get a single-digit number of crash logs. On investigation, I found two distinct backtraces — we’ll need to fix those. The thing is, there’s <em>no freakin’ way</em> the app should crash in those spots. Except that, obviously, it can. Rarely, but it happens.</p>\n\n<p>The servers started timing-out at one point during the day. I contacted DreamHost support and they fixed things (and told me that the fixes they applied should prevent this in the future).</p>\n\n<p>There were a number of nice blog posts and tweets about NetNewsWire, which was <em>awesome</em>. After working so hard for so long, it’s great when people appreciate the app. We don’t get paid in money, after all. 🐣</p>\n\n<p>I have no idea how many downloads of the app there were. GitHub is hosting the download, via its releases feature, and I don’t see a way to find out how many times it’s been downloaded. Which is totally fine with me.</p>\n\n<p style=\"text-align:center\">* * *</p>\n\n<p>I should say something more about the no-bug-reports. There’s no special magic or talent or anything to this — there’s just the willingness to say that we’re not going to ship until we’ve got the bugs out, and then sticking to that.</p>\n\n<p>This is a matter of pride and ethics, for sure, but there’s another dimension: since the app is open source, it’s written by volunteers (including me), and we have no dedicated support team. Any time we spend fielding bug reports is time taken away from working on the next feature.</p>\n\n<p>Making apps — even, or especially, free apps — is an exercise in economics. With free apps, the economics are even more constrained, because nobody is going to hire even a part-time support person. So we do everything we can do keep costs down — especially time costs.</p>\n\n<p>Plus — buggy apps can be demoralizing to the people who work on them. Part of my job is to make sure people are proud and happy to work on the app. And that means making sure everyone knows we’re super-serious about doing our best to never ship bugs.</p>\n"
    },
    {
      "title": "NetNewsWire 5.0 Now Available",
      "date_published": "2019-08-26T08:47:31-07:00",
      "id": "https://inessential.com/2019/08/26/netnewswire_5_0_now_available",
      "url": "https://inessential.com/2019/08/26/netnewswire_5_0_now_available",
      "content_html": "<p><a href=\"https://ranchero.com/netnewswire/\"><img class=\"centeredImage\" src=\"https://ranchero.com/images/nnw_icon_256.png\" height=\"256\" width=\"256\" alt=\"NetNewsWire for Mac icon: globe with a satellite in the foreground.\" /></a></p>\n\n<p><a href=\"https://ranchero.com/netnewswire/\">NetNewsWire 5.0</a> is shipping!</p>\n\n<p>In case you haven’t been following along until just now: NetNewsWire is an open source RSS reader for Mac. It’s free! You can just download it and use it. No strings.</p>\n\n<p>It’s designed to be stable, fast, and free of bugs. It doesn’t have a lot of features yet, and that’s because we prioritized quality over features. We <em>will</em> be adding more features, of course, but not quickly. We’re also working on an iOS app.</p>\n\n<p>It syncs using Feedbin. We’ll support more systems in the future (as many as possible).</p>\n\n<p>I hope you like it!</p>\n\n<p>Some links…</p>\n\n<ul>\n  <li><a href=\"https://ranchero.com/netnewswire/\">NetNewsWire home page</a></li>\n  <li><a href=\"https://ranchero.com/netnewswire/screenshots\">Screenshots</a></li>\n  <li><a href=\"https://nnw.ranchero.com/\">NetNewsWire blog</a></li>\n  <li><a href=\"https://ranchero.com/netnewswire/frequently-asked-questions\">Frequently Asked Questions</a></li>\n  <li><a href=\"https://ranchero.com/netnewswire/help/mac/5.0/en/\">NetNewsWire Help</a></li>\n  <li><a href=\"https://ranchero.com/netnewswire/history\">NetNewsWire History</a></li>\n  <li><a href=\"https://netnewswire.slack.com/join/shared_invite/enQtNjM4MDA1MjQzMDkzLTNlNjBhOWVhYzdhYjA4ZWFhMzQ1MTUxYjU0NTE5ZGY0YzYwZWJhNjYwNTNmNTg2NjIwYWY4YzhlYzk5NmU3ZTc\">NetNewsWire Slack group</a></li>\n  <li><a href=\"https://github.com/brentsimmons/NetNewsWire/blob/master/Technotes/HowToSupportNetNewsWire.markdown\">How to Support NetNewsWire</a></li>\n  <li><a href=\"https://github.com/brentsimmons/NetNewsWire\">NetNewsWire repository on GitHub</a></li>\n</ul>\n\n<h4 id=\"thanks-to-so-many-people\">Thanks to so many people</h4>\n\n<p>I want to especially thank Sheila Simmons and my family and friends.</p>\n\n<p>This release took five years to make, and for four of those years it wasn’t even called NetNewsWire. It was just a year ago that I <a href=\"https://inessential.com/2018/08/31/netnewswire_comes_home\">got the name NetNewsWire back from Black Pixel</a> — and I thank them again for their wonderful generosity.</p>\n\n<p>I also want to thank <a href=\"https://twitter.com/BradEllis\">Brad Ellis</a> for making the beautiful app icon and toolbar icons. Thanks to our major code contributors: <a href=\"https://github.com/vincode-io\">Maurice Parker</a>, <a href=\"https://github.com/olofhellman\">Olof Hellman</a>, and <a href=\"https://github.com/danielpunkass\">Daniel Jalkut</a>. Thanks to <a href=\"https://nostodnayr.net/\">Ryan Dotson</a> for writing the Help book. Thanks to <a href=\"https://rhonabwy.com/\">Joe Heck</a> for looking after infrastructure issues (especially continuous integration).</p>\n\n<p>Thanks to my co-workers and friends at <a href=\"https://www.omnigroup.com/\">The Omni Group</a> (which is a wonderful place to work). Thanks to the ever-patient and ever-awesome NetNewsWire beta testers on the Slack group and elsewhere.</p>\n\n<p>And thanks to everyone who’s ever used the app in its 17-years-and-counting run. Because of you, NetNewsWire has been, and remains, the thrill of my career.</p>\n"
    },
    {
      "title": "End of the Line for NetNewsWire 3.3.2",
      "date_published": "2019-08-22T16:15:04-07:00",
      "id": "https://inessential.com/2019/08/22/end_of_the_line_for_netnewswire_3_3_2",
      "url": "https://inessential.com/2019/08/22/end_of_the_line_for_netnewswire_3_3_2",
      "content_html": "<p>This is a little bit of bad news. It’s not my intention, and it’s not what I want to happen — but NetNewsWire 3.3.2 apparently does not launch in the next version of macOS (10.15, Catalina).</p>\n\n<p>It links to the PubSub framework, which is not included with the next macOS.</p>\n\n<p>NetNewsWire 3.3.2 was the last release of the full version that I worked on, before selling NetNewsWire to Black Pixel, and I’ve heard from lots of people that they’ve been using it ever since. They never switched.</p>\n\n<p>I would rather it continued working forever, but that’s not to be. Not my choice. Sorry about that!</p>\n"
    },
    {
      "date_published": "2019-08-21T22:43:01-07:00",
      "id": "https://inessential.com/2019/08/21/the_netnewswire_blog_has_the_details_on_",
      "url": "https://inessential.com/2019/08/21/the_netnewswire_blog_has_the_details_on_",
      "content_html": "<p>The NetNewsWire blog has the <a href=\"https://nnw.ranchero.com/2019/08/21/netnewswire-b-probably.html\">details on NetNewsWire 5.0b5</a> — which should be the last beta.</p>\n\n<p>Still planning to do the 5.0 final release Monday morning, which really means doing the release on <em>Sunday</em> and pushing an announcement to this blog Monday morning. :)</p>\n\n<p>The last things on my to-do list are actually writing that announcement and doing screenshots for the <a href=\"https://ranchero.com/netnewswire/\">NetNewsWire web page</a>. Easy. 🐯</p>\n"
    },
    {
      "title": "Immunization",
      "date_published": "2019-08-20T13:19:23-07:00",
      "id": "https://inessential.com/2019/08/20/immunization",
      "url": "https://inessential.com/2019/08/20/immunization",
      "content_html": "<p>Before every major release I like to try and think of everything mean that people might say about the app. It’s fun!</p>\n\n<p>So we just went through this exercise on the NetNewsWire Slack group. Here’s a taste:</p>\n\n<ul>\n  <li>This took five years? I could write an RSS parser in a weekend.</li>\n  <li>Can’t get my Twitter and Facebook feeds. Whatever.</li>\n  <li>Doesn’t work with my Usenet host.</li>\n  <li>The information density of the timeline is… lacking. What the hell.</li>\n  <li>Not truly open source since it’s on a Mac.</li>\n  <li>Not truly open source since it’s not GPL.</li>\n  <li>No vim keys. Why bother.</li>\n  <li>Regular people will never use an RSS reader. What’s the point?</li>\n  <li>Brent’s last good idea was in 2002. Consider this a textbook case of coasting.</li>\n  <li>Great app. Too bad RSS died with Google Reader.</li>\n  <li>It totally didn’t pick up my subscriptions from the earlier version. How is this an upgrade?</li>\n  <li>When does a 5.0 have fewer features than a 3.0? When it’s NetNewsWire.</li>\n  <li>The echo chamber will love this app. They always do.</li>\n  <li>Free app. Continues the race to the bottom. Pour one out for Silvio Rizzi.</li>\n  <li>No way to send to Instapaper. Fuck it.</li>\n  <li>Brent Simmons can’t stop pursuing a technology that even Google famously admitted was not worth bothering with.</li>\n  <li>If this app took five years, imagine how long it will take before it will actually sync with Feedly.</li>\n  <li>Sure it’s free, but I bet the Feedbin people paid them off, because the only way to sync is to pay money to Feedbin.</li>\n  <li>No iCloud sync? Jerks.</li>\n  <li>No iOS app. The revolution happened on mobile, Brant. What the actual fuck.</li>\n  <li>Shoulda been Catalyst. Dinosaurs wrote this app.</li>\n  <li>Not on the Mac App Store? I guess they don’t want users.</li>\n  <li>I would totally use this if it had just this one [feature x], which I can’t believe they shipped without. (Multiply this comment by 100, with a different feature x each time.)</li>\n  <li>Area Man Can’t Let RSS Go</li>\n</ul>\n\n<p>Some feedback will be factually inaccurate, but we like to imagine that too:</p>\n\n<ul>\n  <li>I remember using NetNewsWire on OS 9, and it hasn’t really improved since then. They should make it a Cocoa app.</li>\n  <li>Doesn’t work with web comics. POS</li>\n  <li>Doesn’t support 10.5.</li>\n  <li>It should be free.</li>\n  <li>You’d think they would have updated the design — but it looks <em>exactly</em> like NetNewsWire of old.</li>\n  <li>Why the hell would they build on that aging code base from Black Pixel? I heard it doesn’t even use ARC.</li>\n  <li>No way to sync? What’s their actual problem?</li>\n</ul>\n\n<p>See? The actual feedback will be nicer than the stuff we thought up. This provides a bit of immunization. :)</p>\n\n<p>But, also, there will be negative feedback we didn’t imagine. That’s the gold!</p>\n\n<p style=\"text-align:center\">* * *</p>\n\n<p>Bonus from <a href=\"https://red-sweater.com/\">Daniel Jalkut</a>, but not actually a criticism:</p>\n\n<blockquote>\n  <p>Can’t innovate, my RSS.</p>\n</blockquote>\n"
    },
    {
      "date_published": "2019-08-19T17:02:09-07:00",
      "id": "https://inessential.com/2019/08/19/i_think_were_still_on_track_for_releasin",
      "url": "https://inessential.com/2019/08/19/i_think_were_still_on_track_for_releasin",
      "content_html": "<p>I think we’re still on track for releasing NetNewsWire 5.0 Monday, August 26. There will be one more beta before then.</p>\n\n<p>I’ll be available for podcasts, interviews-via-email, etc. If you’d like to set something up, email me or DM me on Twitter.</p>\n"
    },
    {
      "title": "NetNewsWire Public Beta",
      "date_published": "2019-08-12T13:16:44-07:00",
      "id": "https://inessential.com/2019/08/12/netnewswire_public_beta",
      "url": "https://inessential.com/2019/08/12/netnewswire_public_beta",
      "content_html": "<p><a href=\"https://ranchero.com/netnewswire/\"><img src=\"https://ranchero.com/images/nnw_icon_256.png\" height=\"256\" width=\"256\" alt=\"NetNewsWire for Mac icon: globe with a satellite in the foreground.\" /></a></p>\n\n<p><a href=\"https://ranchero.com/netnewswire/\">NetNewsWire</a> has reached public beta! It only took like five years. :)</p>\n\n<p>Our definition of beta is release candidate. With each beta release, we believe that the app is ready to ship. But we want to do further testing to make sure.</p>\n\n<p>NetNewsWire has a <a href=\"https://ranchero.com/netnewswire/help/mac/5.0/en/\">Help Book</a> up on the web now. It needs a couple more pages and some screenshots, but it’s pretty close to finished.</p>\n\n<p>We’ve picked a ship date: Monday, August 26. If we find enough bugs, we won’t hit the ship date. That’s fine — but we’d really like to hit that date.</p>\n\n<p>We’re working from the <a href=\"https://github.com/brentsimmons/NetNewsWire/milestone/3\">5.0 Release milestone</a> now. (The alpha and beta milestones have been closed.) You’ll note that most of what remains are bugs for the marketing site.</p>\n\n<p>P.S. We’ve <a href=\"https://github.com/brentsimmons/NetNewsWire/issues/829\">found a bug already</a> with showing the unread count for the selected item. We’ll get it fixed, hopefully this week, and do another public beta release.</p>\n"
    },
    {
      "title": "Three Podcast Episodes",
      "date_published": "2019-08-01T10:34:03-07:00",
      "id": "https://inessential.com/2019/08/01/three_podcast_episodes",
      "url": "https://inessential.com/2019/08/01/three_podcast_episodes",
      "content_html": "<p>In the <a href=\"https://xcoders.org/2019/08/01/xcoders-podcast-august.html\">latest episode of the Xcoders podcast</a>…</p>\n\n<blockquote>\n  <p>We recap the wonderful July meeting, Liz has a new blog, Jared launched his Scorebook update, and Jared previews his August talk on Xcode projects.</p>\n</blockquote>\n\n<p style=\"text-align:center\">* * *</p>\n\n<p>In the <a href=\"https://theomnishow.omnigroup.com/episode/omnigraffle-performance\">latest episode of The Omni Show</a>, I talk with folks on the OmniGraffle team about their latest update, which includes a bunch of significant performance enhancements.</p>\n\n<p>Performance has been A Topic lately (as it always should be) — and, if you’re a developer, I highly recommend this episode to learn how a company like Omni does performance work.</p>\n\n<p style=\"text-align:center\">* * *</p>\n\n<p>I’m the guest in the <a href=\"https://www.swiftbysundell.com/podcast/53\">latest episode of Swift by Sundell</a>. We talk about blogging, Apple’s Swift era, NetNewsWire, performance, and dynamic and declarative programming.</p>\n\n<p>Swift by Sundell has become The Talk Show of Mac and iOS development. I recommend listening to <em>all</em> the episodes.</p>\n"
    },
    {
      "title": "A Third Text Measurement Caching Trick",
      "date_published": "2019-07-26T15:16:43-07:00",
      "id": "https://inessential.com/2019/07/26/a_third_text_measurement_caching_trick",
      "url": "https://inessential.com/2019/07/26/a_third_text_measurement_caching_trick",
      "content_html": "<p>I forgot about this one — I should have mentioned it in the <a href=\"https://inessential.com/2019/07/26/a_couple_handy_tricks_for_text_measureme\">previous article</a>.</p>\n\n<p>Let’s say the source text that gets displayed in your timeline could be quite long. NetNewsWire has this issue: the summary text is the text of an article (with HTML tags stripped).</p>\n\n<p>This text could be many thousands of words long. But the timeline will only ever display at most a couple lines — even with an absurdly wide timeline on a large screen, it will never display thousands of words.</p>\n\n<p>So here’s the trick:</p>\n\n<p>Use a truncated version of the text rather than the entire text. For the truncation limit, come up with a length that is beyond what could conceivably fit in the space.</p>\n\n<p>This way text measurement will be faster since it’s measuring less text.</p>\n\n<p>(Also use this truncated text for the text field in the timeline.)</p>\n"
    },
    {
      "title": "A Couple Handy Tricks for Text Measurement Caching",
      "date_published": "2019-07-26T13:59:05-07:00",
      "id": "https://inessential.com/2019/07/26/a_couple_handy_tricks_for_text_measureme",
      "url": "https://inessential.com/2019/07/26/a_couple_handy_tricks_for_text_measureme",
      "content_html": "<p>NetNewsWire’s timeline is fast — you can resize it and scroll it quickly.</p>\n\n<p>It has to do a bunch of text measurement in order to do its layout. Text measurement is notoriously slow, though, so we use a cache.</p>\n\n<h4 id=\"how-tall-is-this-text\">How tall is this text?</h4>\n\n<p>Let’s concentrate on the issue of knowing how tall some text is. We know the available width (because we know the width of the timeline at any given moment), and we need to know the <em>height</em> of some text.</p>\n\n<p>Let’s assume we always <code>ceil</code> the height and width and use integers in a <code>WidthHeightCache</code> of <code>[Int: Int]</code> (width: height). Each string passed to our sizer gets its own <code>WidthHeightCache</code>.</p>\n\n<p>The first time it’s asked to get the height for a given width, there’s nothing in the cache, so it has to measure the text and store it in the cache.</p>\n\n<p>And then the second time it looks up the width in the cache — if it’s there, then it returns the cached value. Otherwise it does the text measurement again.</p>\n\n<p>But here’s where it gets smart…</p>\n\n<h4 id=\"trick-1-in-between-widths\">Trick #1: in-between widths</h4>\n\n<p>Let’s say the first time the width was 100, and the second time the width was 200. Both results are in the cache.</p>\n\n<p>If, on the third call, the width is 150 — between 100 and 200 — <em>and</em> the cached height for 100 and 200 are equal, then the height for 150 is necessarily that same height. We can avoid text measurement and just return the cached value. (And we keep the cache from growing on each call.)</p>\n\n<h4 id=\"trick-2-estimated-single-line-height\">Trick #2: estimated single-line height</h4>\n\n<p>What if, on the third call, the width is 250 instead of 150? There’s another trick. When the sizer is initialized, it can come up with an estimate for the height of a single line of text, just by using a short string (with tall characters) and a very large width.</p>\n\n<p>This estimate means you will be able to know if the cached height for 200 is a single line. If that cached height is suitably close to the estimated single-line height, then you can skip text measurement again and just return the cached height for 200 — since more width can’t make the text higher.</p>\n\n<p><a href=\"https://github.com/brentsimmons/NetNewsWire/blob/master/Mac/MainWindow/Timeline/Cell/MultilineTextFieldSizer.swift\">The code in NetNewsWire for this</a> isn’t fully generalized. It maxes out at two lines, since that’s what NetNewsWire uses. But it could form the basis for your own sizing/caching code.</p>\n\n<p>PS Note: this is all because I don’t use Auto Layout on table cell views, for performance reasons. I use Auto Layout everywhere else — just not on table cell views.</p>\n"
    },
    {
      "title": "On the Next Swift by Sundell Podcast",
      "date_published": "2019-07-25T13:17:27-07:00",
      "id": "https://inessential.com/2019/07/25/on_the_next_swift_by_sundell_podcast",
      "url": "https://inessential.com/2019/07/25/on_the_next_swift_by_sundell_podcast",
      "content_html": "<p>I’ll be the guest on the next <a href=\"https://www.swiftbysundell.com/podcast\">Swift by Sundell podcast</a>. I’m <em>so</em> looking forward to this.</p>\n\n<p><a href=\"https://twitter.com/johnsundell/status/1154450537535954945\">John tweets</a>:</p>\n\n<blockquote>\n  <p>My next guest on the @swiftbysundell podcast will be none other than @brentsimmons! 🎉</p>\n\n  <p>We’ll talk about Apple transitioning into its Swift era, Mac development, his work at Omni and on NetNewsWire, and much more — can’t wait! 😀</p>\n\n  <p>Got questions for us? Reply here! 👍</p>\n</blockquote>\n\n<p>If you have questions, reply to John’s tweet. :)</p>\n"
    },
    {
      "date_published": "2019-07-23T14:46:29-07:00",
      "id": "https://inessential.com/2019/07/23/to_write_an_ios_app_you_have_to_learn_ob",
      "url": "https://inessential.com/2019/07/23/to_write_an_ios_app_you_have_to_learn_ob",
      "content_html": "<p>To write an iOS app, you have to learn Objective-C, Swift, or both. Xcode. UIKit and Foundation and maybe Core Data. How to upload apps to the App Store.</p>\n\n<p>But… after learning all that, AppKit, which is super-similar to UIKit, is a bridge too far? This still freaks me out!</p>\n"
    },
    {
      "date_published": "2019-07-23T14:32:43-07:00",
      "id": "https://inessential.com/2019/07/23/i_wish_swift_had_some_kind_of_syntax_tha",
      "url": "https://inessential.com/2019/07/23/i_wish_swift_had_some_kind_of_syntax_tha",
      "content_html": "<p>I wish Swift had some kind of syntax that declares that a function or property can used on the main thread only. If use is attempted from some other thread, then the app should crash.</p>\n\n<p>I know I can — and already do — use a precondition and check that we’re on the main thread, but I keep feeling like this should be a language feature.</p>\n"
    },
    {
      "title": "NetNewsWire Status: Almost Beta",
      "date_published": "2019-07-06T12:25:32-07:00",
      "id": "https://inessential.com/2019/07/06/netnewswire_status_almost_beta",
      "url": "https://inessential.com/2019/07/06/netnewswire_status_almost_beta",
      "content_html": "<p>We’ve got just three things still to do <a href=\"https://github.com/brentsimmons/NetNewsWire/milestone/2\">before we hit 5.0b1</a>:</p>\n\n<p>One is a bug — when searching, a refresh or sync can <a href=\"https://github.com/brentsimmons/NetNewsWire/issues/791\">end search mode</a>.</p>\n\n<p>Another is kind of a documentation thing: we need a <a href=\"https://github.com/brentsimmons/NetNewsWire/issues/155\">set of sample AppleScript scripts</a>. These will help people learn how to script the app — and it will also give us the chance to exercise the scripting support more thoroughly.</p>\n\n<p>The third thing is to <a href=\"https://github.com/brentsimmons/NetNewsWire/issues/2\">write the Help book</a> and publish it on the web. Luckily I’m a pretty fast writer and I’ve written NetNewsWire Help books before. I’ll probably start with an older version and revise it for 5.0.</p>\n\n<p>I <em>think</em> we can get to 5.0b1 some time in July — but, if we don’t, it’s because it’s summer and people are in and out due to vacations and ball games and cookouts and rock-and-roll shows. We’re super-eager to ship, but living life comes first. :)</p>\n"
    },
    {
      "title": "No Algorithms Follow-Up",
      "date_published": "2019-07-03T13:26:35-07:00",
      "id": "https://inessential.com/2019/07/03/no_algorithms_follow_up",
      "url": "https://inessential.com/2019/07/03/no_algorithms_follow_up",
      "content_html": "<p>(This is a follow-up post to <a href=\"https://inessential.com/2019/07/02/no_algorithms\">No Algorithms</a>.)</p>\n\n<p>Joshua Emmons made the point I was trying to make, but more explicitly:</p>\n\n<p><a href=\"https://twitter.com/jemmons/status/1146418876349128704\">Tweet 1</a>:</p>\n\n<blockquote>\n  <p>Brent is making a subtle point here:<br />\n1. Algorithms weigh signal.<br />\n2. In the domain of engagement, outrage and anger mask all other signals.<br />\n3. These signals are fatiguing. As Outrage: 5 is normalized, Outrage: 10 is now required to move the needle.<br /></p>\n</blockquote>\n\n<p><a href=\"https://twitter.com/jemmons/status/1146418877133402112\">Tweet 2</a>:</p>\n\n<blockquote>\n  <p>1. and 2. mean it’s not the algorithm’s fault. There’s no way to write an engagement algorithm that doesn’t select for outrage and anger. But 3. means anything that incorporates such an algorithm actually makes us worse people.</p>\n</blockquote>\n\n<p>This is key: it’s not the motivation — selling ads — that turns algorithms bad. (But, yes, selling ads makes a company pretty keen on these types of algorithms.)</p>\n\n<p>This may not be true of music, movies, and other things, but when it comes to news, outrage and anger swamp everything else.</p>\n\n<p>It’s also not an issue of UI. If there’s any way, implicit or explicit or both, of signaling engagement, it will tend toward rewarding outrage and anger. And this gets even <em>worse</em>, not better, if you add data from what your friends and peers like.</p>\n\n<h4 id=\"trust\">Trust</h4>\n\n<p>Maybe, though, I could do better. I kind of think not, because I think the problem is a bug in human nature. But let’s say I believed I could do better.</p>\n\n<p>Should I?</p>\n\n<p>For one thing: how much better does it have to be? I think an algorithm that radicalizes far fewer people than it might otherwise is not a good call. Better is still <em>harmful</em>.</p>\n\n<p>So here’s the thing I keep coming back to: I think of NetNewsWire as almost a kind of ideal public utility. As such, it should be completely trustworthy — you should never wonder if it’s leading you down some path or other you didn’t intend or foresee.</p>\n\n<p>There are plenty of other apps in the world — every app is part of an ecosystem — and this one doesn’t have to solve what I think may be an unsolvable problem. I’ll leave that to other people.</p>\n\n<p>Instead, it should be one place for news that you can absolutely trust. Articles come in, and NetNewsWire sorts by time, and that’s it. That’s solid.</p>\n"
    },
    {
      "title": "Old Bloggers and New",
      "date_published": "2019-07-02T15:26:33-07:00",
      "id": "https://inessential.com/2019/07/02/old_bloggers_and_new",
      "url": "https://inessential.com/2019/07/02/old_bloggers_and_new",
      "content_html": "<p>I like to read what people write about RSS readers.</p>\n\n<p>One of the themes goes something like this: “I used to use an RSS reader, then I stopped, years ago. I decided to try it again — so I imported my old list of subscriptions. Over half the feeds were gone or no longer updating! Pour one out for RSS.”</p>\n\n<p>Here’s the thing: blogging is like any other human activity — some people stop and other people start. It’s natural.</p>\n\n<p>And: nobody ever said your favorite bloggers would continue forever. It’s okay to miss your old favorites! I miss mine.</p>\n\n<p>But here are a few examples of current blogs that I like that you might like:</p>\n\n<ul>\n  <li><a href=\"https://cate.blog/\">Accidentally in Code</a> - <a href=\"https://cate.blog/feed/\">Feed</a></li>\n  <li><a href=\"http://beckyhansmeyer.com/\">Becky Hansmeyer</a> - <a href=\"https://beckyhansmeyer.com/feed/\">Feed</a></li>\n  <li><a href=\"https://ericasadun.com/\">Erica Sadun</a> - <a href=\"https://ericasadun.com/feed/\">Feed</a></li>\n  <li><a href=\"https://jvns.ca/\">Julia Evans</a> - <a href=\"https://jvns.ca/atom.xml\">Feed</a></li>\n</ul>\n\n<p>There are <em>plenty</em> more.</p>\n"
    },
    {
      "title": "No Algorithms",
      "date_published": "2019-07-02T14:08:03-07:00",
      "id": "https://inessential.com/2019/07/02/no_algorithms",
      "url": "https://inessential.com/2019/07/02/no_algorithms",
      "content_html": "<p>I’ve been asked a few times about using algorithms in NetNewsWire to bring articles you wouldn’t otherwise have seen — from outside your feeds list — to your attention.</p>\n\n<p>I’ve also been asked a similar question about using algorithms to bring articles — from inside your feeds list — to the top based on the likelihood that they’ll interest you.</p>\n\n<p>I’m not going to do either.</p>\n\n<h4 id=\"why\">Why</h4>\n\n<p>These kinds of algorithms optimize for engagement, and the quickest path to engagement is via the drugs outrage and anger — which require, and generate, bigger and bigger hits.</p>\n\n<p>This is what Twitter and Facebook are about — but it’s not right for NetNewsWire. The app puts you in control. You choose the sites and blogs you want to read, and the app reliably shows you their articles sorted by time. That’s it.</p>\n\n<p>My hypothesis: these algorithms — driven by the all-consuming need for engagement in order to sell ads — are part of what’s destroying western liberal democracy, and my app will not contribute to that.</p>\n"
    },
    {
      "date_published": "2019-06-26T15:11:22-07:00",
      "id": "https://inessential.com/2019/06/26/i_cant_help_but_picture_the_15_year_old_",
      "url": "https://inessential.com/2019/06/26/i_cant_help_but_picture_the_15_year_old_",
      "content_html": "<p>I can’t help but picture the 15-year-old — or 45-year-old — who’s never programmed before, and who reads a little bit about Ruby on some website and is intrigued and wants to try learning it.</p>\n\n<p>Maybe they have a thing they want to do, or maybe they’ve always just been curious about programming and this seemed like a nice way to start.</p>\n\n<p>Are we going to ask that person to figure out how to install Ruby? If there are one-click installers out there, are we going to ask them to figure out which one is actually reputable and <em>safe</em>?</p>\n\n<p>Curiosity like this is one of the ways new developers are made. I worry that the less the Mac is tinkerable out-of-the-box, the fewer developers we’ll get.</p>\n\n<p>Or: we’ll only get certain kinds of developers — the ones of the right age and background who can go get a CS degree.</p>\n"
    },
    {
      "title": "Direct and Indirect Interfaces",
      "date_published": "2019-06-26T13:22:40-07:00",
      "id": "https://inessential.com/2019/06/26/direct_and_indirect_interfaces",
      "url": "https://inessential.com/2019/06/26/direct_and_indirect_interfaces",
      "content_html": "<p>The iPhone is the first — and only? — direct interface that is both great and hugely successful. It’s direct in the sense that you touch things directly on the screen.</p>\n\n<p>The first time I used an interface even remotely like that was the first time I ever sat in front of a computer, sometime in the ’70s — it was a <a href=\"https://en.wikipedia.org/wiki/PLATO_(computer_system)\">PLATO system</a> at the University of Delaware. (Elementary school field trip FTW.)</p>\n\n<p>But it took a long time before the technology advanced to the point where direct interfaces could be a mass-market thing.</p>\n\n<h4 id=\"indirect-interfaces\">Indirect Interfaces</h4>\n\n<p>Even though we have this wonderful thing of touching directly on the screen, indirect interfaces are still everywhere. If you have a hardware keyboard connected to your iPad, you’re using an indirect interface with iOS.</p>\n\n<p>And of course there’s the digital crown on the Apple Watch, the remote you use with your Apple TV — and the keyboard and mouse or trackpad you use with your Mac.</p>\n\n<p>Indirect interfaces are part of the future of computing. The future is diverse and complex, and indirect interfaces are a necessary part of the future — because I’m <em>not</em> going to get up and touch my TV screen.</p>\n\n<p>I remember when potato chips were potato chips. Then one day barbecue-flavored chips came along. Then sour cream and onion. Now you can get potato chips of all kinds! It’s crazy, but people have their favorites. The future is like potato chips.</p>\n\n<h4 id=\"the-mac\">The Mac</h4>\n\n<p>The thing about the Mac is that it’s always used via indirect interface. When you have a hardware keyboard and a precision pointer that takes very little energy to move, then you can do things that would be non-ergonomic for a direct interface.</p>\n\n<p>You can have giant monitors — and even multiple monitors — and whip that pointer from place to far-away place with little effort. You can make targets smaller, due to the precision, which means you can make information and controls quite a bit denser. You can put features in menubars, because menus are much easier to get to and navigate using an indirect pointer.</p>\n\n<p>Though this kind of interface is roughly as old as those early touch-screen PLATO systems — and therefore mature, and therefore <em>boring</em> to a lot of people — there’s still so much to be said for the <em>efficiency</em> that it provides. You can see more, and do more, with less physical energy. For eight hours a day, five days a week — if not more, for some people — it matters.</p>\n\n<p>There’s a cognitive cost, I think, but it’s paid up-front and then ingrained, and most of us have forgotten how we learned to use a Mac in the first place. (I was almost certainly older than you when I first started using a Mac, and I only kind-of remember.) (You also have to learn iOS, too.)</p>\n\n<p>And many iPad users see the benefit of indirect interfaces — plenty of people ask their iPad app-makers to provide full control via keyboard. They want to be able to navigate everything without having to touch the screen. I get it! It totally makes sense. I want that too.</p>\n\n<p>But here’s what I think: the future <em>does</em> include machines that are built, like the Mac, entirely around the idea of indirect interfaces. There will be enough people that value efficiency that this isn’t going to go away.</p>\n\n<p>There are, of course, plenty of tasks that are truly best-suited for an iPhone or an iPad. Absolutely. But for many productivity tasks, the force-multiplication that an indirect interface provides makes a big difference to many people.</p>\n\n<p>You may value other things. You may move between both worlds pretty easily. Different people like different kinds of potato chips — but sour cream and onion doesn’t have to disappear so that barbecue may thrive.</p>\n"
    },
    {
      "date_published": "2019-06-26T12:26:22-07:00",
      "id": "https://inessential.com/2019/06/26/_brett_terpstra_https_brettterpstra_com_",
      "url": "https://inessential.com/2019/06/26/_brett_terpstra_https_brettterpstra_com_",
      "content_html": "<p><a href=\"https://brettterpstra.com/2019/06/26/on-scripting-runtimes-and-macos/\">Brett Terpstra</a> writes about how scripting runtimes are being removed from the Mac in the next OS release.</p>\n\n<p>This is actually distressing, and not that much attention has been paid to this.</p>\n\n<p>I’m one of those people who just use whatever’s on the system. I don’t think I’ve ever installed a different version of Ruby, and I don’t even know how.</p>\n\n<p>But the ability to run Ruby scripts is hugely important to me — for one thing, this blog is generated by a <a href=\"https://github.com/brentsimmons/Wildcat\">set of Ruby scripts</a> running on my Mac.</p>\n"
    },
    {
      "title": "Impostor Syndrome",
      "date_published": "2019-06-25T22:44:20-07:00",
      "id": "https://inessential.com/2019/06/25/impostor_syndrome",
      "url": "https://inessential.com/2019/06/25/impostor_syndrome",
      "content_html": "<p>In the <a href=\"https://xcoders.org/2019/06/24/welcome-to-the.html\">introductory episode of the Xcoders podcast last night</a>, Liz and Jared talked a little bit about impostor syndrome.</p>\n\n<p>I don’t have anything profound to say about it — just a few random notes…</p>\n\n<p>There’s no developer bit in anyone’s DNA. I don’t have that bit — nobody does. There’s no such thing, and there’s no collection of genes that make you a real developer, either.</p>\n\n<p>You don’t have to have a CS degree. (I didn’t even own a computer when I was in college. And I didn’t graduate.)</p>\n\n<p>If you’re working on an app, you’re a developer. Period. Even if it’s not a stand-alone app; even if it’s some scripts. You’re solving a problem on a computer with logic and code — that makes you a developer. That’s all it takes!</p>\n\n<p>Impostor syndrome goes away eventually. You just forget about it. The fastest way to get past it is probably to help other people.</p>\n\n<p>It’s okay to admit that you have it. It’s been many years, but I had it too. :)</p>\n"
    },
    {
      "title": "Xcoders Podcast",
      "date_published": "2019-06-25T13:23:15-07:00",
      "id": "https://inessential.com/2019/06/25/xcoders_podcast",
      "url": "https://inessential.com/2019/06/25/xcoders_podcast",
      "content_html": "<p><a href=\"https://twitter.com/emarley\">Liz Marley</a> and <a href=\"https://twitter.com/jsorge\">Jared Sorge</a> are the hosts of the brand-new Xcoders Community Podcast.</p>\n\n<p>Last night they <a href=\"https://xcoders.org/2019/06/24/welcome-to-the.html\">published the first episode</a>, an introduction. Future posts will include interviews and discussions of interest to our community of developers, designers, testers, support people, and writers.</p>\n\n<p>The podcast isn’t on iTunes yet, but there’s an RSS feed you can subscribe to: <a href=\"https://xcoders.org/podcast.xml\">https://xcoders.org/podcast.xml</a></p>\n\n<p>Special thanks go to <a href=\"https://micro.blog/\">Micro.blog</a>! We’re using their podcasting support, which makes it <a href=\"https://help.micro.blog/2018/microcasting/\">super-easy to publish a podcast</a>. Write a title and description, upload the audio file, and there you go. Keen. 🐣</p>\n"
    },
    {
      "title": "On Public Betas",
      "date_published": "2019-06-24T13:55:54-07:00",
      "id": "https://inessential.com/2019/06/24/on_public_betas",
      "url": "https://inessential.com/2019/06/24/on_public_betas",
      "content_html": "<p>Person on Slack: “Public betas are up”</p>\n\n<p>Me: “Bummer”</p>\n\n<p>We go through this every summer. Public betas are a moving target, and they have bugs — and people think that app developers can fix any issue immediately.</p>\n\n<p>If you need to get your work done — or, heck, even if you just expect your AirPods to work — you should install public betas on devices and machines that are <em>not</em> your main machine.</p>\n\n<p>Even if you get extremely lucky and everything works with one release, the next public beta could change all that.</p>\n\n<h4 id=\"also\">Also</h4>\n\n<p>Right now I don’t know of any bugs with NetNewsWire 5.0 alpha on the Mac public beta. But it’s so early, and I haven’t personally tested it.</p>\n\n<p>The Omni Group just put up a <a href=\"https://www.omnigroup.com/blog/mac-and-ios-public-betas-and-omni-apps\">blog post that recommends caution</a> with public betas.</p>\n\n<p>Our friends at Rogue Amoeba have <a href=\"https://twitter.com/RogueAmoeba/status/1143232738641752065\">tweeted about their apps not being compatible yet</a>. (They’re working on it, of course.)</p>\n\n<p>There’s a <a href=\"https://twitter.com/hotdogsladies/status/146350449283440640\">classic Merlin Mann tweet on the subject</a>.</p>\n\n<p>And… <a href=\"http://shouldiinstallios13publicbeta.com/\">shouldiinstallios13publicbeta.com</a></p>\n"
    },
    {
      "date_published": "2019-06-20T11:39:23-07:00",
      "id": "https://inessential.com/2019/06/20/one_of_my_favorite_moments_of_all_the_om",
      "url": "https://inessential.com/2019/06/20/one_of_my_favorite_moments_of_all_the_om",
      "content_html": "<p>One of my favorite moments of all The Omni Show episodes is in the <a href=\"https://theomnishow.omnigroup.com/episode/lanette-creamer-software-test-pilot\">episode with Lanette Creamer</a>, whose cat Navani has been featured on the <a href=\"https://microblog.omnigroup.com/\">Omni microblog</a> a couple times. (<a href=\"https://microblog.omnigroup.com/2019/04/04/meet-navani-she.html\">Here</a> and <a href=\"https://microblog.omnigroup.com/2019/05/24/weve-got-more.html\">here</a>.)</p>\n\n<p>From the transcript:</p>\n\n<blockquote>\n  <p><strong>Brent:</strong> Nice. So does Navani have any hobbies, obsessions?</p>\n\n  <p><strong>Lanette:</strong> I would say her top interest is murder, and it’s really a huge thing with her.  She loves it so much that she will literally be purring while she is trying to kill and destroy things.</p>\n</blockquote>\n\n<p>That’s kitties for ya. :)</p>\n"
    },
    {
      "date_published": "2019-06-17T13:49:00-07:00",
      "id": "https://inessential.com/2019/06/17/the_fact_that_disposebag_is_not_a_name_h",
      "url": "https://inessential.com/2019/06/17/the_fact_that_disposebag_is_not_a_name_h",
      "content_html": "<p>The fact that <code>DisposeBag</code> is <a href=\"https://www.caseyliss.com/2019/6/17/combine-wheres-the-beef\">not a name</a> in Apple’s Combine framework sparks joy. I was never, ever going to write code where that was a thing I had to read.</p>\n"
    },
    {
      "date_published": "2019-06-14T15:02:18-07:00",
      "id": "https://inessential.com/2019/06/14/thing_you_should_know_mark_boszko_my_fri",
      "url": "https://inessential.com/2019/06/14/thing_you_should_know_mark_boszko_my_fri",
      "content_html": "<p>Thing you should know: Mark Boszko — my friend, co-worker, and producer of the The Omni Show — did a podcast called <a href=\"https://www.opticalpodcast.com/episode/\">The Optical</a> that dives into movie special effects, and it has some amazing guests such as Douglas Trumbull.</p>\n\n<p>If you like movies, you should listen to these.</p>\n"
    },
    {
      "title": "Seattle Xcoders Tonight: WWDC Topics",
      "date_published": "2019-06-13T11:31:46-07:00",
      "id": "https://inessential.com/2019/06/13/seattle_xcoders_tonight_wwdc_topics",
      "url": "https://inessential.com/2019/06/13/seattle_xcoders_tonight_wwdc_topics",
      "content_html": "<p>The Xcoders meeting tonight should be pretty great — we’ve got a bunch of <a href=\"https://xcoders.org/2019/06/11/this-thursday-seven.html\">lightning talks on new stuff from WWDC</a>.</p>\n\n<p>It’s the Woodstock of today. In later years, more people will claim to have been at this meeting than could have fit in the room. :)</p>\n"
    },
    {
      "date_published": "2019-06-12T22:26:51-07:00",
      "id": "https://inessential.com/2019/06/12/in_the_sweet_setups_review_of_ios_rss_re",
      "url": "https://inessential.com/2019/06/12/in_the_sweet_setups_review_of_ios_rss_re",
      "content_html": "<p>In the Sweet Setup’s <a href=\"https://thesweetsetup.com/apps/best-rss-app-ipad/\">review of iOS RSS readers</a> from last May, there’s this sentence that I love: “It’s perhaps ironic that Google Reader helped popularize RSS, considering the sheer horror of its interface design.”</p>\n"
    },
    {
      "title": "NetNewsWire CI, New Technote",
      "date_published": "2019-06-12T22:09:39-07:00",
      "id": "https://inessential.com/2019/06/12/netnewswire_ci_new_technote",
      "url": "https://inessential.com/2019/06/12/netnewswire_ci_new_technote",
      "content_html": "<p>We now have continuous integration set up for NetNewsWire. I didn’t need it for a long time, when it was just me — but now that we have multiple contributors, it’s important.</p>\n\n<p>We’re doing the app <em>and</em> the separate frameworks (RSCore, RSParser, etc.) the app uses.</p>\n\n<p>Thanks to <a href=\"https://circleci.com/\">circleci</a> for the service and to <a href=\"https://rhonabwy.com/\">Joe Heck</a> for setting it all up!</p>\n\n<p style=\"text-align:center\">* * *</p>\n\n<p>Most of my work, between now and shipping, is writing. Here’s a new technote: <a href=\"https://github.com/brentsimmons/NetNewsWire/blob/master/Technotes/Reruns.md\">Why Reruns Happen</a>.</p>\n\n<p style=\"text-align:center\">* * *</p>\n\n<p>We have had not one single crash report since 5.0a3 shipped. :)</p>\n\n<p>(Yes, the app does have a crash catcher: no, we’re not relying on people finding the crash logs on disk and sending them in.)</p>\n"
    },
    {
      "title": "NetNewsWire Contributing, Code of Conduct",
      "date_published": "2019-06-11T22:20:35-07:00",
      "id": "https://inessential.com/2019/06/11/netnewswire_contributing_code_of_conduct",
      "url": "https://inessential.com/2019/06/11/netnewswire_contributing_code_of_conduct",
      "content_html": "<p>I finally got around to two things NetNewsWire needed: 1) a page describing how to contribute, and 2) a code of conduct.</p>\n\n<p>They’re both on the same <a href=\"https://github.com/brentsimmons/NetNewsWire/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a> page.</p>\n\n<p>If you’d like to contribute, the process is pretty straightforward. File a ticket, talk it over, write the code, do a pull request.</p>\n\n<p>I don’t like too much process. This seems just right. That said, I’m still learning about how to manage an open source project, and any feedback on this (and anything else) is definitely welcome.</p>\n"
    },
    {
      "title": "NetNewsWire Status",
      "date_published": "2019-06-10T22:23:40-07:00",
      "id": "https://inessential.com/2019/06/10/netnewswire_status",
      "url": "https://inessential.com/2019/06/10/netnewswire_status",
      "content_html": "<p>We just released <a href=\"https://nnw.ranchero.com/2019/06/10/netnewswire-a.html\">NetNewsWire 5.0a3</a>.</p>\n\n<p>Almost all the current remaining work in the <a href=\"https://github.com/brentsimmons/NetNewsWire/milestone/2\">Beta milestone</a> is writing — some tech notes and, most importantly, the Help book.</p>\n\n<p>What will probably happen is that we’ll run out of coding to do while I’m still writing. Which is fine — it just means <a href=\"https://github.com/vincode-io\">Maurice</a> can go see how much we can use of SwiftUI in the iOS app. We want to go as all-in as possible (while still making a great app).</p>\n\n<p>We’ll use SF Symbol too, of course. Probably Combine. All the things!</p>\n\n<p>(Yes, we’ll be requiring iOS 13 for the iOS app.)</p>\n\n<p>At any rate — the Mac app (minus documentation) is damn close to what’s going to ship. It’s just a matter of finding and fixing the last few bugs.</p>\n\n<p>Maybe shipping in July? Fingers crossed. :)</p>\n"
    },
    {
      "date_published": "2019-06-09T20:37:53-07:00",
      "id": "https://inessential.com/2019/06/09/catalina_compatibility_tip_dont_use_nsfo",
      "url": "https://inessential.com/2019/06/09/catalina_compatibility_tip_dont_use_nsfo",
      "content_html": "<p>Catalina compatibility tip: don’t use NSFont as a key in a Swift dictionary. I’m getting crashes from 10.15 users that include this message:</p>\n\n<blockquote>\n  <p>Fatal error: Duplicate keys of type ‘NSFont’ were found in a Dictionary. This usually means either that the type violates Hashable’s requirements, or that members of such a dictionary were mutated after insertion.</p>\n</blockquote>\n\n<p>It’s quite possible this was always a bad idea, of course, and it’s just that in 10.15 it crashes. I don’t know.</p>\n"
    }
  ]
}
